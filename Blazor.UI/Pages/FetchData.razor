@page "/fetchdata"
@using Common.ViewModel
@inject HttpClient Http
@inject IJSRuntime JSRuntime

<h1>Previsão do tempo</h1>

<p>Este componente demonstra a busca de dados do servidor.</p>

<br />

@if (forecasts == null)
{
    <p><em>Carregando...</em></p>
}
else
{
    <MatTable Class="mat-elevation-z5 table table-striped table-hover"
              Items="@forecasts"
              LoadInitialData="true"
              Striped="true"
              DebounceMilliseconds="150"
              PageSize="5"
              PageRecordCountLabel="Itens por página:"
              PageLabel="Página"
              FilterByColumnName="Summary"
              SearchTermFieldLabel="Pesquisar">
        <MatTableHeader>
            <th>
                <div style="width:135px;">
                    <MatButton class="btn btn-default"
                               @onclick="@( () => openModal(1))"
                               Icon="playlist_add"
                               Label="Adicionar"
                               Raised="true">
                    </MatButton>
                </div>
            </th>
            <th>Summary</th>
            <th>Date</th>
            <th style="min-width: 135px;">Temp. (C)</th>
            <th style="min-width: 135px;">Temp. (F)</th>
        </MatTableHeader>
        <MatTableRow Context="forecast">
            <td>
                <MatIconButton Icon="delete"></MatIconButton>
            </td>
            <td>@forecast.Summary</td>
            <td>@forecast.Date.ToShortDateString()</td>
            <td>@forecast.TemperatureC</td>
            <td>@forecast.TemperatureF</td>
        </MatTableRow>
    </MatTable>

}

@if (ModalOpen)
{
    <div class="modal" tabindex="-1" style="display:block" role="dialog">
        <div class="modal-dialog modal-max">
            <div class="modal-content">

                <div class="panel panel-filled">
                    <div class="panel-heading">
                        <div class="panel-tools">
                            <a class="panel-close" @onclick="closeModal"><i class="fa fa-times"></i></a>
                        </div>
                        <h4 class="modal-title">@modalTitle</h4>
                    </div>
                    <br />
                    <div class="panel-body">

                        <EditForm Model="@Model" OnValidSubmit="@HandleValidSubmit" OnInvalidSubmit="@HandleInvalidSubmit">
                            <div class="alert @StatusClass">@StatusMessage</div>

                            <FluentValidationValidator />
                            <ValidationSummary />

                            <div class="row">
                                <div class="form-group">
                                    <div class="col-lg-2">
                                        <label for="NotaFiscal">N.F: </label>
                                        <InputDate Id="NotaFiscal" Class="form-control" @bind-Value="@Model.Date"></InputDate>
                                            <ValidationMessage For="@(() => Model.Date)" />
                                    </div>
                                    <div class="col-lg-3">
                                        <p>
                                            <label for="Data">Data</label>
                                            <MatDatePicker Required="true"
                                                           @bind-Value="Date1"
                                                           AllowInput="false"
                                                           Format="dd/MM/yyyy">
                                            </MatDatePicker>
                                        </p>
                                    </div>
                                    <div class="col-lg-5">
                                        <label for="Cliente">Cliente: </label>
                                        <InputText Id="Cliente" Class="form-control" @bind-Value="@Model.Summary"></InputText>
                                        <ValidationMessage For="@(() => Model.Summary)" />
                                    </div>
                                    <div class="col-lg-2">
                                        <label for="ValorCompra">Valor de Venda</label>
                                        <input type="text" class="form-control" id="ValorVenda" name="ValorVenda" placeholder="Valor de Venda">
                                    </div>
                                </div>
                            </div>
                            <br />
                            <div class="row">
                                <div class="form-group">
                                    <div class="col-lg-2">
                                        <label for="ValorCompra">Valor de Compra</label>
                                        <input type="text" class="form-control" id="ValorCompra" name="ValorCompra" placeholder="Valor de Compra">
                                    </div>
                                    <div class="col-lg-1">
                                        <label for="Imposto">% Imposto</label>
                                        <input type="text" class="form-control" id="Imposto" name="Imposto" placeholder="% Imp.">
                                    </div>
                                    <div class="col-lg-2">
                                        <label for="Frete1">Frete 01</label>
                                        <input type="text" class="form-control" id="Frete1" name="Frete1" placeholder="Frete 01">
                                    </div>
                                    <div class="col-lg-2">
                                        <label for="Frete2">Frete 02</label>
                                        <input type="text" class="form-control" id="Frete2" name="Frete2" placeholder="Frete 02">
                                    </div>
                                    <div class="col-lg-1">
                                        <label for="CustoOperacional">% C.O</label>
                                        <input type="text" class="form-control" id="CustoOperacional" name="CustoOperacional" placeholder="% C.O">
                                    </div>
                                    <div class="col-lg-2">
                                        <label for="OutrasDespesas">Outras Despesas</label>
                                        <input type="text" class="form-control" id="OutrasDespesas" name="OutrasDespesas" placeholder="Outras Despesas">
                                    </div>
                                    <div class="col-lg-2">
                                        <label for="CustoTotal">Custo Total</label>
                                        <input type="text" class="form-control" id="CustoTotal" name="CustoTotal" placeholder="Custo Total">
                                    </div>
                                </div>
                            </div>
                            <br />
                            <div class="row">
                                <div class="form-group">
                                    <div class="col-lg-2">
                                        <label for="PercentualComissao">% Comissão</label>
                                        <input type="text" class="form-control" id="PercentualComissao" name="PercentualComissao" placeholder="% Comissão">
                                    </div>
                                    <div class="col-lg-2">
                                        <label for="ValorComissao">Valor Comissão</label>
                                        <input type="text" class="form-control" id="ValorComissao" name="ValorComissao" placeholder="Valor de Comissão">
                                    </div>
                                    <div class="col-lg-2">
                                        <label for="PercentualLucro">% Lucro</label>
                                        <input type="text" class="form-control" id="PercentualLucro" name="PercentualLucro" placeholder="% Lucro">
                                    </div>
                                    <div class="col-lg-2">
                                        <label for="ValorLucro">Valor Lucro</label>
                                        <input type="text" class="form-control" id="ValorLucro" name="ValorLucro" placeholder="Valor de Lucro">
                                    </div>
                                </div>
                            </div>
                            <br />
                            <div class="row">
                                <div class=form-group>
                                    <div class="col-lg-12">
                                        <label for="Descricao">Descrição</label>
                                        <textarea class="form-control" rows="3" placeholder="Descrição"></textarea>
                                    </div>
                                </div>
                            </div>
                            <br />
                            <div class="row">
                                @*<div class="form-group">
                                    <div class="col-lg-4">
                                        <label>
                                            <input type="checkbox"> Ativo
                                        </label>
                                    </div>
                                </div>*@
                            </div>

                            <div class="pull-right">
                                <button type="submit" class="btn btn-accent">Salvar</button>
                            </div>
                            <br />

                        </EditForm>
                    </div>
                </div>

            </div>
        </div>
    </div>
}

@code {
    public DateTime? Date1 { get; set; } = DateTime.Now.AddDays(-10);
    private string StatusMessage;
    private string StatusClass;
    private EditContext EditContext;
    private WeatherForecastViewModel Model = new WeatherForecastViewModel();
    WeatherForecastViewModel[] forecasts;
    bool ModalOpen { get; set; }
    string modalTitle { get; set; }

    protected void HandleValidSubmit()
    {
        StatusClass = "alert-info";
        StatusMessage = DateTime.Now + " Handle valid submit";
    }

    protected void HandleInvalidSubmit()
    {
        StatusClass = "alert-danger";
        StatusMessage = DateTime.Now + " Handle invalid submit";
    }

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetJsonAsync<WeatherForecastViewModel[]>("https://localhost:44301/api/weatherforecast");
        EditContext = new EditContext(Model);
        EditContext.OnFieldChanged += EditContext_OnFieldChanged;

        base.OnInitialized();
    }

    protected override void OnAfterRender(bool param)
    {
        base.OnAfterRender(true);

        SetOkDisabledStatus();
    }

    private void EditContext_OnFieldChanged(object sender, FieldChangedEventArgs e)
    {
        SetOkDisabledStatus();
    }

    private void SetOkDisabledStatus()
    {
        var validator = EditContextFluentValidationExtensions.GetValidatorForModel(Model);
        var validationResults = validator.Validate(Model);
        var isInvalid = validationResults.Errors.Count == 0 ? false : true;
        //Console.WriteLine(validationResults.Errors.Count);

        var task = controlInputTypeSubmit(isInvalid);
        task.GetAwaiter();
    }

    void openModal(int hash)
    {
        this.Model = new WeatherForecastViewModel();
        this.modalTitle = "Cadastro de Venda";
        this.ModalOpen = true;

    }
    protected void closeModal()
    {
        this.ModalOpen = false;
    }

    // Call Functions Jquery
    private async Task controlInputTypeSubmit(bool isInvalid)
    {
        var result = await JSRuntime.InvokeAsync<bool>("controlInputTypeSubmit", isInvalid);

        StateHasChanged();
    }
}

